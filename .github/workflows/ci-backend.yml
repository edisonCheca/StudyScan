name: Backend CI

# Se ejecuta en cada push a la rama 'main' o 'dev', o en cualquier Pull Request
on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    # La máquina virtual donde se ejecutará
    runs-on: ubuntu-latest

    # Define el directorio de trabajo
    defaults:
      run:
        working-directory: ./backend

    steps:
      # 1. Clona tu repositorio en la máquina virtual
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura el entorno de Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' # Elige la versión que usarás

      # 3. Instala las dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Instalaremos las dependencias de testing aquí
          pip install pytest flake8

      # 4. Linting (Revisar estilo del código) con flake8
      - name: Lint with flake8
        run: |
          # Detiene el build si hay errores de estilo
          # --count: muestra el total de errores
          # --select=E9,F63,F7,F82: ignora algunos errores comunes
          # --show-source: muestra la línea con el error
          # --statistics: cuenta las ocurrencias de cada error
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      # 5. Testing (Ejecutar pruebas) con pytest
      # Este paso no hará nada al principio, pero estará listo para cuando añadas tests
      - name: Test with pytest
        run: |
          pytest